@model Product

<div class="container mx-auto p-4">
    <div class="mb-8 border-b-2 border-gray-300 pb-4">
        <h1 class="text-2xl md:text-3xl font-bold text-gray-800 relative inline-block">
            @((Model.Id != 0) ? "Update" : "Create") Product
            <span class="absolute bottom-0 left-0 w-full h-1 bg-blue-600 rounded"></span>
        </h1>
        <p class="text-gray-600 mt-2">Manage product details in the inventory system</p>
    </div>

    <form method="post" class="mx-auto max-w-4xl" enctype="multipart/form-data">
        <input asp-for="@(Model.Id)" hidden />
        <input asp-for="@(Model.ImgURL)" hidden />

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Left Column -->
            <div class="space-y-6">
                <div class="form-group">
                    <label asp-for="Name" class="block font-medium text-gray-700 mb-2 border-b border-gray-300 pb-1">Product Name <span class="text-red-500">*</span></label>
                    <input asp-for="Name" class="w-full border-x-0 border-t-0 border-b-2 border-gray-300 px-1 py-2 focus:outline-none focus:border-blue-500 transition-colors bg-gray-50" />
                    <span asp-validation-for="Name" class="text-sm text-red-500 mt-1 block"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Brand" class="block font-medium text-gray-700 mb-2 border-b border-gray-300 pb-1">Brand <span class="text-red-500">*</span></label>
                    <input asp-for="Brand" class="w-full border-x-0 border-t-0 border-b-2 border-gray-300 px-1 py-2 focus:outline-none focus:border-blue-500 transition-colors bg-gray-50" />
                    <span asp-validation-for="Brand" class="text-sm text-red-500 mt-1 block"></span>
                </div>

                <div class="form-group">
                    <label asp-for="WeightVolume" class="block font-medium text-gray-700 mb-2 border-b border-gray-300 pb-1">Weight/Volume</label>
                    <input asp-for="WeightVolume" class="w-full border-x-0 border-t-0 border-b-2 border-gray-300 px-1 py-2 focus:outline-none focus:border-blue-500 transition-colors bg-gray-50" />
                    <span asp-validation-for="WeightVolume" class="text-sm text-red-500 mt-1 block"></span>
                </div>

                <div class="grid grid-cols-1 sm:grid-cols-2 gap-5">
                    <div class="form-group">
                        <label asp-for="UnitPrice" class="block font-medium text-gray-700 mb-2 border-b border-gray-300 pb-1">Unit Price <span class="text-red-500">*</span></label>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 flex items-center pointer-events-none">
                                <span class="text-gray-600">$</span>
                            </div>
                            <input asp-for="UnitPrice" class="w-full border-x-0 border-t-0 border-b-2 border-gray-300 pl-4 py-2 focus:outline-none focus:border-blue-500 transition-colors bg-gray-50" />
                        </div>
                        <span asp-validation-for="UnitPrice" class="text-sm text-red-500 mt-1 block"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="UnitsInStock" class="block font-medium text-gray-700 mb-2 border-b border-gray-300 pb-1">In Stock <span class="text-red-500">*</span></label>
                        <input asp-for="UnitsInStock" type="number" min="0" class="w-full border-x-0 border-t-0 border-b-2 border-gray-300 px-1 py-2 focus:outline-none focus:border-blue-500 transition-colors bg-gray-50" />
                        <span asp-validation-for="UnitsInStock" class="text-sm text-red-500 mt-1 block"></span>
                    </div>
                </div>

                <div class="flex items-center mt-6 bg-gray-50 p-3 border-l-4 border-blue-500">
                    <div class="flex h-5 items-center">
                        <input asp-for="IsAvailable" type="checkbox" class="h-5 w-5 rounded border-gray-300 text-blue-600 focus:ring-blue-500" />
                    </div>
                    <div class="ml-3 text-sm">
                        <label asp-for="IsAvailable" class="font-medium text-gray-700">Available for Purchase</label>
                        <p class="text-gray-500">Product will be visible to customers</p>
                    </div>
                </div>
            </div>

            <!-- Right Column -->
            <div class="space-y-6">
                <div>
                    <label class="block font-medium text-gray-700 mb-2 border-b border-gray-300 pb-1">Product Image</label>
                    <div class="border border-dashed border-gray-300 rounded-lg bg-gray-50 p-3">
                        <div id="image-preview" class="relative flex h-60 items-center justify-center rounded-lg overflow-hidden bg-white border border-gray-200">
                            @if (!string.IsNullOrEmpty(Model.ImgURL))
                            {
                                <img src="@Model.ImgURL" alt="Product Image" class="max-h-60 max-w-full object-contain" id="preview-image">
                            }
                            else
                            {
                                <div class="text-center" id="no-image">
                                    <svg class="mx-auto h-12 w-12 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                    </svg>
                                    <p class="mt-1 text-sm text-gray-500">No image uploaded</p>
                                </div>
                            }
                        </div>
                        <div class="mt-3">
                            <label class="block w-full cursor-pointer rounded-md border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 text-center transition-colors">
                                <span>Upload image</span>
                                <input type="file" name="file" class="sr-only" id="file-upload" accept="image/*" onchange="previewImage(this)">
                            </label>
                            <p class="mt-1 text-xs text-gray-500 text-center">PNG, JPG, GIF up to 5MB</p>
                        </div>
                    </div>
                    <span asp-validation-for="ImgURL" class="text-sm text-red-500 mt-1 block"></span>
                </div>
            </div>
        </div>

        <!-- Full Width Fields -->
        <div class="mt-8 space-y-6">
            <div class="form-group">
                <label asp-for="Description" class="block font-medium text-gray-700 mb-2 border-b border-gray-300 pb-1">Description <span class="text-red-500">*</span></label>
                <textarea asp-for="Description" rows="4" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors bg-gray-50"></textarea>
                <span asp-validation-for="Description" class="text-sm text-red-500 mt-1 block"></span>
            </div>

            <div class="form-group">
                <label asp-for="Ingredients" class="block font-medium text-gray-700 mb-2 border-b border-gray-300 pb-1">Ingredients</label>
                <textarea asp-for="Ingredients" rows="4" class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors bg-gray-50"></textarea>
                <span asp-validation-for="Ingredients" class="text-sm text-red-500 mt-1 block"></span>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="mt-10 pt-6 border-t border-gray-200 flex justify-between items-center">
            <a asp-action="Index" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" class="-ml-1 mr-2 h-5 w-5 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
                Back to List
            </a>

            @if (Model.Id != 0)
            {
                <button type="submit" class="inline-flex items-center px-5 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="-ml-1 mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12" />
                    </svg>
                    Update Product
                </button>
            }
            else
            {
                <button type="submit" class="inline-flex items-center px-5 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors">
                    <svg xmlns="http://www.w3.org/2000/svg" class="-ml-1 mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                    </svg>
                    Create Product
                </button>
            }
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Image preview functionality
        function previewImage(input) {
            const preview = document.getElementById('image-preview');
            const noImageEl = document.getElementById('no-image');

            if (input.files && input.files[0]) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    if (noImageEl) {
                        noImageEl.style.display = 'none';
                    }

                    let previewImg = document.getElementById('preview-image');

                    if (!previewImg) {
                        previewImg = document.createElement('img');
                        previewImg.id = 'preview-image';
                        previewImg.className = 'max-h-60 max-w-full object-contain';
                        preview.appendChild(previewImg);
                    }

                    previewImg.src = e.target.result;
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

        // Form field focus effect
        document.addEventListener('DOMContentLoaded', function() {
            const inputFields = document.querySelectorAll('input[type="text"], input[type="number"], input[type="email"]');

            inputFields.forEach(input => {
                // Add focus class
                input.addEventListener('focus', function() {
                    const parentLabel = this.closest('.form-group').querySelector('label');
                    if(parentLabel) {
                        parentLabel.classList.add('text-blue-600');
                    }
                    this.classList.add('bg-white');
                    this.classList.remove('bg-gray-50');
                    this.style.borderColor = '#3b82f6';
                });

                // Remove focus class
                input.addEventListener('blur', function() {
                    const parentLabel = this.closest('.form-group').querySelector('label');
                    if(parentLabel) {
                        parentLabel.classList.remove('text-blue-600');
                    }
                    if (!this.value) {
                        this.classList.add('bg-gray-50');
                        this.classList.remove('bg-white');
                    }
                    this.style.borderColor = '';
                });
            });
        });

        // Initialize TinyMCE with better configuration for admin experience
        tinymce.init({
            selector: 'textarea',
            plugins: 'anchor autolink charmap codesample emoticons image lists media table visualblocks wordcount',
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | forecolor backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image media table | removeformat',
            menubar: 'file edit view insert format tools table',
            height: 250,
            content_style: 'body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif; font-size: 14px; line-height: 1.6; }',
            branding: false,
            promotion: false,
            resize: true,
            statusbar: true,
            setup: function(editor) {
                editor.on('change', function() {
                    editor.save();
                });
            }
        });

        // Form validation enhancements
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');

            form.addEventListener('submit', function(event) {
                const requiredFields = ['Name', 'Brand', 'UnitPrice', 'UnitsInStock'];
                let hasError = false;

                requiredFields.forEach(field => {
                    const input = document.querySelector(`[name="${field}"]`);
                    if (!input.value.trim()) {
                        const validationSpan = document.querySelector(`[data-valmsg-for="${field}"]`);
                        if (validationSpan) {
                            validationSpan.textContent = `${field} is required.`;
                        }
                        hasError = true;
                    }
                });

                if (hasError) {
                    event.preventDefault();
                }
            });
        });
    </script>

    <style>
        /* Custom styling for form elements */
        .form-group label {
            font-weight: 500;
            letter-spacing: 0.3px;
            transition: color 0.3s ease;
        }

        .form-group input:focus {
            box-shadow: 0 1px 0 0 #3b82f6;
        }

        /* Better transitions for input fields */
        .form-group input {
            transition: all 0.3s ease;
        }

        /* Main heading underline animation */
        .container h1 .absolute {
            transition: width 0.3s ease;
        }

        .container h1:hover .absolute {
            width: 70%;
        }

        /* Focus effect for improved visibility */
        .form-group input:focus {
            background-color: white;
            border-color: #3b82f6;
        }
    </style>
}